#8
1. strip()
Python中有三个去除头尾字符、空白符的函数，它们依次为:
strip： 用来去除头尾字符、空白符(包括\n、\r、\t、' '，即：换行、回车、制表符、空格)
lstrip：用来去除开头字符、空白符(包括\n、\r、\t、' '，即：换行、回车、制表符、空格)
rstrip：用来去除结尾字符、空白符(包括\n、\r、\t、' '，即：换行、回车、制表符、空格)

注意：这些函数都只会删除头和尾的字符，中间的不会删除。

用法分别为：
string.strip([chars])
string.lstrip([chars])
string.rstrip([chars])

参数chars是可选的，当chars为空，默认删除string头尾的空白符(包括\n、\r、\t、' ')
当chars不为空时，函数会被chars解成一个个的字符，然后将这些字符去掉。

它返回的是去除头尾字符(或空白符)的string副本，string本身不会发生改变。

2.正则表达式

. # 点可代表一切字符

\ # 起转义作用

[...] # 指代方括号中的任意字符

\d # 指代数字0-9

\D # 指代非数字

\s # 指代一切空格，包括tab制表符、空格、换行等

\S # 指代非空格

\w # 指代大小写字母、数字和下划线

\W # 指代非大小写字母、数字和下划线

* # 匹配前面字符 >=0 次

+ # 匹配前面字符1次及以上

? # 匹配前面字符0次或1次

{m} # 匹配m次

{m,n} # 匹配m到n次

{m,} # 至少匹配m次

3.re.findall 

re.findall(pattern, string, flags=0)

pattern-->正则表达式

string-->需要处理的字符串

flags-->说明匹配模式，如是否大小写re.I

4. *
如果在解包的过程中左边变量的个数不等于右边可迭代对象中元素的个数，在python3中是在某一个变量前加一个*,这个*可以放在任意位置，如果*放在中间，解释器会对没有*的变量进行匹配，剩余元素全部匹配给带*的变量。
a, b, *c = [1, 2, 3, 4]
print(a, b, c)

1 2 [3, 4]

#443
注意审题，看清楚 return的是什么

a = ["1","2","3","4"]
        a[1:1] = list(str(900))
        print(str(900))
        print(list(str(900)))
        print(a)
900
['9', '0', '0']
['1', '9', '0', '0', '2', '3', '4']
可以用list[x:x] = num 进行插入
